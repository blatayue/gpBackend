type node {
  id: ID!
}

type SpotifyAudioAnalysis {
  meta: SpotifyMeta
  track: SpotifyAATrack
  bars: [SpotifyBar]
  beats: [SpotifyBeat]
  tatums: [SpotifyTatum]
  sections: [SpotifySection]
  segments: [SpotifySegment]
}

type SpotifyMeta {
  analyzer_version: String
  platform: String
  detailed_status: String
  status_code: Int
  timestamp: Int
  analysis_time: Float
  input_process: String
}

type SpotifyAATrack {
  num_samples: Int
  duration: Float
  sample_md5: String
  offset_seconds: Int
  window_seconds: Int
  analysis_sample_rate: Int
  analysis_channels: Int
  end_of_fade_in: Float
  loudness: Float
  tempo: Float
  tempo_confidence: Float
  time_signature: Int
  time_signature_confidence: Float
  key: Int
  key_confidence: Float
  mode: Int
  mode_confidence: Float
  codestring: String
  code_version: Float
  echoprintstring: String
  echoprint_version: Float
  synchstring: String
  synch_version: Float
  rhythmstring: String
  rhythm_version: Float
}

type SpotifyBar {
  start: Float
  duration: Float
  confidence: Float
}

type SpotifyBeat {
  start: Float
  duration: Float
  confidence: Float
}

type SpotifyTatum {
  start: Float
  duration: Float
  confidence: Float
}

type SpotifySection {
  start: Float
  duration: Float
  confidence: Float
  loudness: Float
  tempo: Float
  tempo_confidence: Float
  key: Int
  key_confidence: Float
  mode: Int
  mode_confidence: Float
  time_signature: Int
  time_signature_confidence: Float
}

type SpotifySegment {
  start: Float
  duration: Float
  confidence: Float
  loudness_start: Int
  loudness_max_time: Int
  loudness_max: Int
  pitches: [Float]
  timbre: [Float]
}
