type Node {
  id: ID!
}

type SpotifyQueryResponse {
  href: String
  items: [SpotifyTrack]
  limit: Int
  next: String
  offset: Int
  previous: String
  total: Int
}

type SpotifyTrack implements Node {
  album: SpotifyAlbum
  artists: [SpotifyArtist]
  available_markets: [String]
  disc_number: Int
  duration_ms: Int
  explicit: Bool
  external_ids: External_Ids
  external_urls: External_Urls
  href: String
  id: ID!
  is_local: Bool
  name: String
  popularity: Int
  preview_url: String
  track_number: Int
  type: String
  uri: String
}

type SpotifyAlbum implements Node {
  album_type: String
  artists: [SpotifyArtist]
  available_markets: [String]
  external_urls: External_Urls
  href: String
  id: ID!
  images: [SpotifyImage]
  name: String
  release_date: String
  release_day_precision: String
  type: String
  uri: String
}

type SpotifyImage {
  height: Int
  width: Int
  url: String
}

type SpotifyArtist implements Node {
  external_urls: External_Urls
  href: String
  id: ID!
  name: String
  type: String
  uri: String
}

type External_Ids {
  isrc: String
}
type External_Urls {
  spotify: String
}
